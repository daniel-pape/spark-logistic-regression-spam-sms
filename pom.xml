<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Information about the project -->
    <groupId>danielpape</groupId>
    <artifactId>example-build</artifactId>
    <name>logistic-regression-spark</name>
    <packaging>jar</packaging>
    <version>1.0</version>

    <dependencies>
        <!-- Dependencies for Scala support and Scala test frameworks. -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.complete.version}</version>
        </dependency>
        <dependency>
            <groupId>org.specs2</groupId>
            <artifactId>specs2_${scala.minor.version}</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest</artifactId>
            <version>${scalatest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scalaz</groupId>
            <artifactId>scalaz-core_${scala.minor.version}</artifactId>
            <version>7.2.0-M1</version>
        </dependency>
        <!-- Also used by specs2 -->
        <dependency>
            <groupId>org.scalaz.stream</groupId>
            <artifactId>scalaz-stream_${scala.minor.version}</artifactId>
            <version>0.1</version>
        </dependency>
        <!-- Spark core -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.minor.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <!-- For machine learning with spark -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_${scala.minor.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <!-- Spark streaming -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_${scala.minor.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <!-- MongoDB support -->
        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>casbah-core_2.10</artifactId>
            <version>2.5.0</version>
        </dependency>
        <dependency>
            <groupId>org.mongodb.mongo-hadoop</groupId>
            <artifactId>mongo-hadoop-core</artifactId>
            <version>1.3.2</version>
        </dependency>
        <!-- For CSV parsing -->
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>3.3</version>
        </dependency>
    </dependencies>

    <build>
        <!-- Specifies the source and test directories -->
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <!-- Use the Maven-Scala plugin for compiling and running tests. -->
        <plugins>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <version>${scala.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <phase>test-compile</phase>
                    </execution>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Maven shade plug-in that creates uber JARs -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <!-- It was important to add this to avoid errors with the JAR creation. -->
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>

                    <transformers>
                        <!-- This transform is used so that merging of akka configuration files works -->
                        <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer">
                        </transformer>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                            <resource>reference.conf</resource>
                        </transformer>
                        <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <!-- Put main class here (full specified as packagename.class) -->
                            <mainClass>smsClassificationWithLogRegr.SpamClassificationViaLogisticRegression</mainClass>
                        </transformer>
                    </transformers>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <properties>
        <scala.maven.plugin.version>2.15.2</scala.maven.plugin.version>
        <scala.complete.version>2.10.4</scala.complete.version>
        <scala.minor.version>2.10</scala.minor.version>
        <scalatest.version>1.2</scalatest.version>
        <spark.version>1.4.0</spark.version>
        <encoding>UTF-8</encoding>
    </properties>
</project>